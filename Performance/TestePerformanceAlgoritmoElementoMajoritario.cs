using BenchmarkDotNet.Attributes;
using EncontrarElementoMajoritario.App.Algoritmos;

namespace EncontrarElementoMajoritario.App.Performance
{
    [MemoryDiagnoser]
    [RankColumn]
    public class TestePerformanceAlgoritmoElementoMajoritario
    {
        [Params(
            new int[] { 62, 51, 17, 61, 66, 44, 83, 62, 65, 97 },
            new int[] { 54, 33, 41, 7, 40, 46, 29, 51, 92, 19, 99, 80, 83, 37, 73, 67, 12, 33, 15, 6, 55, 95, 46, 11, 88, 13, 58, 92, 15, 51, 35, 90, 100, 10, 36, 88, 88, 18, 90, 89, 100, 76, 95, 65, 90, 90, 90, 25, 45, 90 },
            new int[] { 12, 27, 36, 87, 17, 53, 89, 90, 80, 65, 30, 81, 80, 15, 17, 52, 81, 5, 97, 57, 18, 24, 27, 69, 7, 74, 48, 68, 61, 70, 70, 66, 32, 97, 73, 55, 61, 47, 76, 35, 83, 13, 44, 50, 42, 4, 77, 53, 27, 22, 12, 43, 22, 56, 36, 51, 67, 67, 30, 11, 91, 49, 72, 65, 45, 5, 62, 13, 81, 17, 50, 78, 35, 4, 37, 24, 98, 69, 60, 89, 85, 95, 100, 80, 54, 96, 38, 93, 44, 34, 73, 68, 3, 94, 77, 31, 88, 44, 95, 28, 19, 27, 96, 17, 29, 57, 83, 71, 34, 16, 11, 18, 3, 3, 23, 9, 85, 45, 75, 19, 28, 6, 73, 21, 29, 30, 88, 93, 46, 95, 15, 75, 47, 45, 47, 98, 31, 54, 71, 3, 50, 60, 35, 59, 25, 7, 58, 19, 95, 18, 35, 93, 23, 95, 27, 81, 71, 69, 37, 29, 22, 97, 4, 58, 31, 29, 75, 31, 79, 86, 24, 8, 74, 63, 63, 13, 90, 83, 27, 68, 3, 62, 65, 42, 43, 76, 8, 94, 65, 11, 59, 59, 16, 27, 92, 19, 43, 17, 36, 63 },
            new int[] { 27, 100, 69, 8, 93, 73, 14, 21, 81, 5, 90, 11, 74, 86, 97, 24, 24, 36, 17, 100, 3, 24, 6, 39, 71, 84, 70, 65, 46, 27, 22, 52, 45, 74, 61, 48, 83, 45, 95, 16, 26, 59, 52, 36, 67, 41, 3, 50, 78, 66, 66, 53, 35, 69, 95, 56, 42, 87, 70, 69, 38, 30, 32, 64, 51, 89, 13, 37, 61, 15, 23, 38, 47, 95, 19, 21, 27, 15, 38, 56, 27, 56, 85, 15, 45, 32, 61, 100, 9, 12, 22, 83, 15, 76, 69, 19, 52, 27, 59, 23, 90, 3, 34, 59, 33, 5, 54, 76, 25, 13, 67, 89, 28, 34, 16, 18, 77, 28, 59, 27, 33, 29, 99, 64, 31, 8, 21, 69, 51, 13, 48, 53, 59, 49, 53, 97, 59, 53, 88, 86, 48, 98, 76, 14, 99, 43, 40, 85, 43, 26, 32, 96, 78, 98, 85, 44, 86, 10, 76, 58, 85, 88, 56, 93, 51, 44, 16, 78, 32, 61, 31, 5, 11, 74, 17, 25, 68, 35, 58, 38, 31, 70, 46, 60, 42, 39, 9, 57, 19, 81, 53, 37, 36, 93, 80, 32, 45, 6, 67, 50, 65, 70, 55, 60, 88, 95, 18, 74, 47, 89, 29, 86, 66, 92, 83, 32, 68, 40, 16, 51, 4, 47, 76, 64, 52, 79, 39, 68, 49, 90, 77, 13, 94, 75, 89, 21, 65, 60, 10, 34, 89, 70, 49, 18, 24, 86, 60, 36, 32, 34, 77, 19, 52, 75, 95, 40, 45, 50, 22, 9, 4, 41, 40, 95, 8, 12, 89, 92, 67, 77, 93, 30, 89, 61, 95, 85, 15, 16, 2, 11, 12, 88, 70, 62, 33, 53, 91, 63, 92, 15, 54, 10, 9, 91, 31, 95, 88, 58, 61, 47, 73, 80, 90, 98, 62, 31, 8, 83, 29, 96, 37, 90, 55, 63, 26, 83, 25, 13, 5, 35, 16, 80, 78, 62, 35, 86, 19, 31, 93, 44, 12, 36, 59, 3, 3, 67, 11, 51, 76, 2, 75, 42, 52, 82, 91, 68, 48, 42, 97, 15, 95, 45, 52, 87, 55, 21, 6, 24, 36, 89, 28, 93, 72, 49, 88, 66, 13, 29, 62, 59, 18, 67, 43, 3, 8, 44, 11, 49, 59, 65, 90, 25, 30, 32, 48, 21, 5, 100, 24, 3, 52, 41, 69, 89, 61, 21, 79, 25, 13, 73, 91, 35, 25, 47, 39, 18, 49, 88, 64, 2, 86, 76, 50, 4, 67, 59, 48, 97, 76, 30, 67, 54, 85, 57, 54, 53, 74, 59, 17, 52, 63, 37, 18, 77, 11, 30, 26, 97, 97, 27, 36, 97, 41, 35, 61, 31, 95, 59, 94, 69, 94, 94, 99, 48, 50, 48, 78, 50, 75, 68, 36, 83, 54, 70, 69, 98, 6, 94, 15, 99, 55, 71, 96, 34, 16, 62, 11, 39, 29, 80, 39, 58, 47, 91, 64, 19, 91, 76, 96, 1, 33, 4, 79, 98, 64, 6, 76, 20, 86, 97, 48, 91, 83, 48, 50, 26, 71, 85, 66, 95, 7, 62, 16, 21, 52, 72, 84, 76, 51, 44, 17, 91, 92, 78, 77, 68, 36, 21, 59, 40, 73, 25, 92, 58, 52, 53, 92, 21, 95, 74, 4, 69, 77, 99, 42, 61, 96, 75, 88, 85, 72, 81, 87, 19, 36, 11, 6, 28, 63, 40, 38, 64, 21, 72, 22, 97, 31, 14, 9, 79, 75, 41, 66, 63, 60, 20, 53, 73, 50, 1, 60, 17, 74, 58, 81, 36, 91, 80, 4, 46, 3, 14, 43, 2, 35, 91, 89, 4, 97, 23, 40, 4, 73, 39, 90, 30, 25, 10, 96, 3, 18, 29, 63, 12, 10, 26, 71, 52, 83, 44, 27, 34, 26, 21, 29, 7, 75, 58, 13, 48, 92, 54, 45, 86, 81, 22, 92, 18, 82, 45, 26, 94, 100, 11, 81, 99, 17, 91, 1, 84, 45, 97, 48, 3, 76, 95, 58, 13, 35, 78, 40, 33, 93, 33, 93, 88, 4, 21, 97, 53, 61, 37, 17, 6, 1, 89, 56, 93, 27, 41, 50, 24, 24, 100, 8, 89, 26, 1, 78, 35, 67, 78, 70, 51, 91, 17, 28, 15, 99, 73, 66, 78, 12, 34, 70, 50, 44, 78, 22, 51, 60, 64, 84, 34, 34, 25, 95, 59, 84, 90, 57, 58, 81, 56, 99, 76, 100, 89, 75, 4, 48, 88, 93, 44, 14, 8, 84, 67, 95, 83, 95, 7, 66, 68, 91, 32, 36, 7, 14, 88, 25, 80, 76, 83, 5, 50, 10, 94, 11, 42, 56, 54, 91, 80, 50, 53, 94, 100, 65, 30, 11, 2, 4, 68, 22, 97, 43, 79, 5, 48, 73, 41, 34, 55, 40, 53, 94, 59, 95, 2, 99, 60, 100, 7, 45, 71, 72, 74, 72, 36, 40, 47, 19, 77, 69, 45, 94, 66, 14, 29, 68, 50, 50, 96, 72, 75, 27, 33, 63, 34, 48, 61, 25, 63, 8, 79, 77, 100, 77, 17, 67, 64, 89, 9, 22, 5, 61, 45, 21, 43, 70, 6, 45, 57, 43, 54, 91, 58, 38, 82, 54, 66, 51, 15, 15, 78, 79, 83, 84, 90, 53, 81, 43, 58, 38, 8, 11, 82, 64, 72, 58, 45, 98, 63, 89, 85, 54, 22, 100, 2, 80, 29, 50, 4, 87, 46, 86, 88, 8, 29, 58, 72, 53, 37, 18, 78, 41, 33, 75, 76, 68, 30, 84, 19, 98, 14, 46, 54, 14, 81, 23, 7, 3, 96, 42, 69, 97, 37, 38, 85, 89, 15, 47, 54, 58, 77, 70, 54, 78, 11, 87, 51, 73, 76, 62, 69, 70, 99, 55, 75, 65, 38, 80, 98, 47, 8, 7, 83, 78, 100, 6, 40, 78, 85, 86, 49, 79, 1, 94, 80, 77, 32, 12, 77, 36, 60, 9, 92, 33, 84, 23, 35, 96, 38, 23, 73, 93, 68, 96, 25, 87, 72, 9, 86, 12, 48, 45, 67, 5, 85, 8, 40, 33, 47, 19, 85, 23, 38, 12, 69 })]
        public int[] Array { get; set; }

        [Benchmark]
        public void MedirPerformanceEncontrarElementoMajoritarioEmComplexidadeQuadratica()
        {
            AlgoritmoElementoMajoritario.EncontrarElementoMajoritarioEmComplexidadeQuadratica(Array, Array.Length);
        }

        [Benchmark]
        public void MedirPerformanceEncontrarElementoMajoritarioEmComplexidadeLinear()
        {
            AlgoritmoElementoMajoritario.EncontrarElementoMajoritarioEmComplexidadeLinear(Array, Array.Length);
        }
    }
}